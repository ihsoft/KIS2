KISConfig
{
	name = KISConfig
	AlphaFlags
	{
		enableInventorySamples = true
	}
	Performance
	{
		// Defines how many items can one KIS slot hold. It affects the UI performance.
		maxKisSlotSize = 500
		// Defines how many items can one STOCK slot hold. It affects the save state complexity.
		maxStockSlotSize = 99
	}
	Sounds
	{
		bipWrong = KIS2/Sounds/bipwrong
	}
	BuilderMode
	{
		enabled = true
	}
	PickupMode
	{
		// The key that activates the in-flight pickup mode.
		//
		// It's a standard keyboard event definition. Even though it can have modifiers, avoid specifying them since it may
		// affect the UX experience.
		actionKey = j

		// The renderer to apply to the scene part that is being dragged.
		//
		// If it's an empty string (or not set), than the shader on the part won't be changed.
		holoPartShader = Transparent/Diffuse

		// The color and transparency of the holo model of the part being dragged.
		holoColor = 0, 1, 1, 0.7

		// Distance from the camera of the object that cannot be placed anywhere.
		//
		// If an item cannot be dropped, it will be "hanging" at the camera at this distance.
		hangingObjectDistance = 10

		// Maximum distance from the current camera to the hit point, where an item can be dropped.
		// This setting limits how far the mod will be looking for the possible placement location,
		// but it doesn't define the maximum interaction distance.
		maxRaycastDistance = 50
	}
	StateHandling
	{
		// List of module field which should always be reset to default (from prefab).
		//
		// Use this setting to deal with states that are not desirable to be persisted
		// into the inventory (e.g. kOS part IDs). The values is a path: <module>["/" <field>].
		// E.g. "foo/bar" will reset field "bar" in the modules with name "foo". If only the
		// module name is specified, then all the fields will be reset.
		//resetModuleField = foo/bar
		//resetModuleField = bar
	}
	Compatibility
	{
		// Indicates if the inventory description should not have the stock related features.
		fixInventoryDescriptions = true

		// Indicates if the stock inventory GUI must be hidden.
		hideStockGui = false

		// When this mode is enabled, the KIS mod will be 100% compatible with the stock
		// inventory system if the game's type is either carrier or science.
		//
		// Some inventory related features of KIS will be lost, but most of nice KIS
		// features will be available. And the stock system behavior will be fully honored.
		// This mode makes sense if there is a plan to drop KIS in the future or if there
		// are other mods that require the strict stock logic.
		fullCompatibilityInCarrierGame = true

		// Indicates if the stock inventory compatibility must be maintained in the sandbox
		// games. Similar to "fullCompatibilityInCarrierGame".
		fullCompatibilityInSandboxGame = false

		// List of the parts for which the volume must be calculated based on the model size,
		// regardless to the cargo module settings. 
		stockVolumeExceptions =	Tube1
		stockVolumeExceptions =	Tube2
		stockVolumeExceptions =	Tube3
		stockVolumeExceptions =	Tube4
		stockVolumeExceptions =	Tube1p5
	}

	// The settings below tune the inventory part icons appearance. These settings are for the
	// pro folks. Don't touch them if you don't understand how it works.
	IconSnapshotSettings
	{
		baseIconResolution = 256

		cameraFov = 540
		cameraElevation = 15
		cameraAzimuth = 25
		cameraPitch = 15
		cameraHeading = 25

		lightRotation = 45, -90, 0
		lightIntensity = 0.4

		ambientLightColor = 0.463, 0.463, 0.463, 1.000
		ambientEquatorColor = 0.580, 0.580, 0.580, 1.000
		ambientGroundColor = 0.345, 0.345, 0.345, 1.000
		ambientSkyColor = 0.463, 0.463, 0.463, 1.000
	}
}
